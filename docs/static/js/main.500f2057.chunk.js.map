{"version":3,"sources":["firebase/firebase-config.js","types/types.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","components/journal/JorunalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoutes.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JouralApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","login","Logout","uiSetError","uiRemoveError","uiStartLoading","uiFinishLoading","notesAddNew","notesActive","notesLoad","notesUpdated","notesFileUrl","notesDelete","notesLogoutCleaning","loadNotes","uid","a","collection","get","noteSnap","notes","forEach","snapHijo","push","id","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","note","type","payload","addNewNote","starLoadNotes","dispatch","setNotes","starSaveNotes","getState","url","noteToFirestore","doc","update","refresNote","Swal","fire","title","deleteNote","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","NotesAppBar","useDispatch","active","useSelector","state","className","moment","format","accept","style","display","onChange","e","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","starUploading","onClick","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","src","alt","iud","delete","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","startDeleting","NothingSelected","setError","err","removeError","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","user","displayName","catch","console","log","message","logout","JorunalEntry","date","noteDate","backgroundSize","backgroundImage","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","width","LoginScreen","loading","ui","onSubmit","preventDefault","autoComplete","disabled","signInWithPopup","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PrivateRoutes","isAuthenticated","Component","rest","props","prototypes","PropTypes","bool","isRequired","func","PublicRoute","AppRouter","cheking","setCheking","isLoggeIn","setIsLoggeIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JouralApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.500f2057.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\n const firebaseConfig = {\r\n   apiKey: \"AIzaSyB2Ldv49KMSUGRd5pPQEym6api04R-2Z00\",\r\n   authDomain: \"journalapp-42517.firebaseapp.com\",\r\n   projectId: \"journalapp-42517\",\r\n   storageBucket: \"journalapp-42517.appspot.com\",\r\n   messagingSenderId: \"895237797673\",\r\n   appId: \"1:895237797673:web:879f0d5adad9bf4bca6938\",\r\n   measurementId: \"G-78TXPCY0SZ\",\r\n };\r\n // Initialize Firebase\r\n firebase.initializeApp(firebaseConfig);\r\n \r\n\r\n const db = firebase.firestore()\r\n const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n     db,\r\n     googleAuthProvider,\r\n     firebase\r\n }","\r\n    export const types ={\r\n\r\n        login: '[Auth]Login',\r\n        Logout: '[Auth] Logout',\r\n\r\n\r\n        uiSetError: '[UI] SetError',\r\n        uiRemoveError: '[UI] RemoveError',\r\n\r\n        uiStartLoading: '[UI] Start loading',\r\n        uiFinishLoading: '[UI] Finish loading',\r\n\r\n        notesAddNew: '[Notes] New note',\r\n        notesActive: '[Notes] Set active note',\r\n        notesLoad: '[Notes] Load notes',\r\n        notesUpdated: '[Notes] Updated note',\r\n        notesFileUrl: '[Notes] Updated image url',\r\n        notesDelete: '[Notes] Delete note',\r\n        notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n    }","import { db } from \"../firebase/firebase-config\"\r\n\r\n\r\n    export const loadNotes = async(uid)=>{\r\n\r\n        const noteSnap = await db.collection(`${uid}/journal/notes`).get();\r\n        const notes = []\r\n\r\n        noteSnap.forEach(snapHijo =>{\r\n            notes.push({\r\n                id: snapHijo.id,\r\n                ...snapHijo.data()\r\n            })\r\n        });\r\n\r\n        return notes;\r\n    }","\r\nexport const fileUpload = async(file)=>{\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/byalexks/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"upload_preset\", \"react-journalapp\");\r\n    formData.append(\"file\", file);\r\n\r\n    try {\r\n\r\n        const resp = await fetch(cloudUrl,{\r\n            method:'POST',\r\n            body: formData\r\n        });\r\n        if (resp.ok) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        }else{\r\n            throw await resp.json()\r\n        }\r\n    } catch (err) {\r\n        throw err;\r\n        \r\n    }\r\n\r\n}","import Swal from \"sweetalert2\";\r\nimport { types } from \"../types/types\";\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\n\r\n\r\n export const startNewNote = ()=>{\r\n\r\n    // react-journalapp\r\n     return async(dispatch, getState) => {\r\n         \r\n        const {uid} = getState().auth;\r\n        \r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote)\r\n      \r\n        dispatch( activeNote(doc.id, newNote) );\r\n        dispatch(addNewNote(doc.id, newNote));\r\n     }\r\n }\r\n\r\n \r\n export const activeNote = (id, note)=>({\r\n\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note,\r\n    }\r\n\r\n })\r\n\r\n export const addNewNote = (id,note) =>({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, ...note\r\n    }\r\n\r\n })\r\n\r\n export const starLoadNotes = (uid) => {\r\n    return async(dispatch)=>{\r\n\r\n        const notes = await loadNotes(uid)  \r\n        dispatch( setNotes( notes ) )\r\n\r\n\r\n    }\r\n}\r\n\r\n export const setNotes = (notes) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n    \r\n });\r\n\r\n export const starSaveNotes = (note) => {\r\n     return async(dispatch, getState)=>{\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        if (!note.url) {\r\n             delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = {...note}\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore)\r\n\r\n        dispatch( refresNote( note.id, noteToFirestore ) )\r\n        Swal.fire('Saved', note.title, 'success')\r\n\r\n     }\r\n }\r\n\r\n export const refresNote = (id, note) =>({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id, \r\n        note:{\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n\r\n })\r\n\r\n export const starUploading = (file)=>{\r\n\r\n    return async(dispatch, getState)=>{\r\n        \r\n        const {active:activeNote} = getState().notes\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            onBeforeOpen: ()=>{\r\n                Swal.showLoading();\r\n            }\r\n        })\r\n\r\n        const fileUrl = await fileUpload(file);\r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch( starSaveNotes(activeNote));\r\n\r\n        Swal.close();\r\n\r\n    }\r\n\r\n }\r\n\r\n export const startDeleting = (id)=>{\r\n     return async(dispatch, getState)=>{\r\n\r\n        const iud = getState().auth.uid;\r\n\r\n        await db.doc(`${iud}/journal/notes/${id}`).delete();\r\n        Swal.fire({\r\n          title: \"Are you sure?\",\r\n          text: \"You won't be able to revert this!\",\r\n          icon: \"warning\",\r\n          showCancelButton: true,\r\n          confirmButtonColor: \"#3085d6\",\r\n          cancelButtonColor: \"#d33\",\r\n          confirmButtonText: \"Yes, delete it!\",\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\r\n            dispatch( deleteNote(id) );\r\n          }\r\n        });\r\n        \r\n\r\n     }\r\n }\r\n\r\n export const deleteNote = (id) =>({\r\n     \r\n    type: types.notesDelete,\r\n    payload: id\r\n\r\n })\r\n\r\n export const notesLogout = () => ({\r\n\r\n    type: types.notesLogoutCleaning,\r\n\r\n })","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const reset = (newFormState = initialState) => {\r\n    setValues(newFormState);\r\n  };\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  return [values, handleInputChange, reset];\r\n};\r\n","import React from 'react'\r\nimport moment from \"moment\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { starSaveNotes, starUploading } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  const {active} = useSelector(state => state.notes)\r\n\r\n  const handleSave = () => {\r\n    \r\n    dispatch( starSaveNotes(active) );\r\n    \r\n  }\r\n\r\n  const handlePictureClick = () => {\r\n    document.querySelector(\"#fileSelector\").click();\r\n  }\r\n\r\n  const handleFileChange = (e)=>{\r\n    const file = e.target.files[0];\r\n  \r\n    if (file) {\r\n      dispatch( starUploading(file) );\r\n      \r\n    }\r\n  }\r\n\r\n    return (\r\n      <div className=\"notes__appbar\">\r\n        <span>{moment().format(\"MMMM Do YYYY\")}</span>\r\n        <div>\r\n          <input\r\n            id=\"fileSelector\"\r\n            type=\"file\"\r\n            name=\"file\"\r\n            accept=\"image/x-png,image/gif,image/jpeg\"\r\n            style={{ display: \"none\" }}\r\n            onChange={handleFileChange}\r\n          />\r\n          <button onClick={handlePictureClick} className=\"btn\">\r\n            Picture\r\n          </button>\r\n          <button onClick={handleSave} className=\"btn\">\r\n            Save\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const {active:note} = useSelector(state => state.notes)\r\n    const dispatch = useDispatch()\r\n    \r\n    const [formValues, handleInputChange, reset] = useForm(note);\r\n    const {body, title, id} = formValues;\r\n\r\n    const activeId = useRef(note.id)\r\n    \r\n    // para que se recargue cada vez que se cambia de nota\r\n    useEffect(() => {\r\n      // si el ide select es diferente cambia solo ese componente\r\n      if (note.id !== activeId.current) {\r\n          reset(note);\r\n          activeId.current = note.id  \r\n      }\r\n    }, [note, reset])\r\n    \r\n    \r\n    useEffect(() => {\r\n      dispatch( activeNote(formValues.id, {...formValues}) );\r\n      \r\n    }, [formValues])\r\n\r\n    const handleDelete = ()=>{\r\n      \r\n      dispatch(startDeleting(id) )\r\n    }\r\n\r\n    return (\r\n      <div className=\"notes__main-content\">\r\n        <NotesAppBar />\r\n\r\n        <div className=\"notes__content\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Some awesome title\"\r\n            className=\"notes__title-input\"\r\n            name='title'\r\n            value={title}\r\n            onChange={handleInputChange}\r\n          />\r\n          <textarea\r\n            placeholder=\"what happened today\"\r\n            className=\"notes__textarea\"\r\n            name='body'\r\n            value={body}\r\n            onChange={handleInputChange}\r\n          ></textarea>\r\n\r\n          {note.url && (\r\n            <div className=\"notes__image\">\r\n              <img\r\n                src={note.url}\r\n                alt=\"iamgen\"\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n        <button\r\n            className=\"btn btn-danger\"\r\n            onClick={handleDelete}\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    );\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n      <div className=\"nothing__main-content\">\r\n        <p>\r\n            Select something\r\n            <hr />\r\n            pr create an entry\r\n        </p>\r\n        \r\n        <i className=\"far far-star fa-4x mt-5\"></i>\r\n      </div>\r\n    );\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\n// mostrar error, action\r\nexport const setError = (err)=>({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = () => ({\r\n  type: types.uiRemoveError,\r\n  \r\n});\r\n\r\nexport const startLoading = () => ({\r\n  type: types.uiStartLoading,\r\n});\r\n\r\nexport const finishLoading = () => ({\r\n  type: types.uiFinishLoading,\r\n});","import Swal from \"sweetalert2\";\r\n\r\nimport { types } from \"../types/types\";\r\nimport { firebase, googleAuthProvider } from \"../firebase/firebase-config\";\r\nimport { finishLoading, startLoading } from \"./ui\";\r\nimport { notesLogout } from \"./notes\";\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n  return (dispatch) => {\r\n    dispatch(startLoading());\r\n    firebase.auth().signInWithEmailAndPassword(email, password)\r\n      .then(({ user }) => {\r\n        dispatch(finishLoading());\r\n        dispatch(login( user.uid, user.displayName ));\r\n      })\r\n      .catch((e) => {\r\n          console.log(e);\r\n          dispatch(finishLoading());\r\n          Swal.fire('Error', e.message, 'error') \r\n      });\r\n  };\r\n};\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n  return (dispatch) => {\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(async ({ user }) => {\r\n        await user.updateProfile({ displayName: name });\r\n        dispatch(login(user.uid, user.displayName));\r\n      })\r\n      .catch((e)=>{\r\n          console.log(e);\r\n      });\r\n      \r\n  };\r\n};\r\n\r\nexport const startGoogleLogin = () => {\r\n  return (dispatch) => {\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(googleAuthProvider)\r\n      .then(({ user }) => {\r\n        dispatch(login(user.uid, user.displayName));\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        Swal.fire('Error', e.message, 'error') \r\n      });\r\n  };\r\n};\r\n\r\nexport const login = (uid, displayName) => ({\r\n  type: types.login,\r\n  payload: {\r\n      uid,\r\n      displayName,\r\n    },\r\n});\r\n\r\nexport const starLogout = () => {\r\n  return async (dispatch) => {\r\n    await firebase.auth().signOut();\r\n    dispatch(logout());\r\n    dispatch(notesLogout());\r\n  };\r\n};\r\n\r\nexport const logout = () => ({\r\n  type: types.Logout,\r\n});\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport { useDispatch } from 'react-redux'\r\nimport { activeNote } from \"../../actions/notes\";\r\n\r\nexport const JorunalEntry = ({id, date, title, body, url}) => {\r\n\r\n  const dispatch = useDispatch()\r\n  const noteDate = moment(date)\r\n\r\n    const handleEntryClick = ()=>{\r\n      dispatch( activeNote(id,{\r\n        date, title, body, url\r\n      }) );\r\n    }\r\n    \r\n\r\n    return (\r\n      <div onClick={handleEntryClick} className=\"jorunal__entry pointer\">\r\n        {\r\n          //  if url es igual a null no lo muestra\r\n          url && (\r\n            <div\r\n              className=\"jorunal__entry-picture\"\r\n              style={{\r\n                backgroundSize: \"cover\",\r\n                backgroundImage: `url(${url})`,\r\n              }}\r\n            ></div>\r\n          )\r\n        }\r\n        <div className=\"journal__entry-body\">\r\n          <p className=\"journal__entry-title\">{title}</p>\r\n          <p className=\"journal-entry-content\">{body}</p>\r\n        </div>\r\n\r\n        <div className=\"journal__entry-date-box\">\r\n          <span>{noteDate.format(\"dddd\")}</span>\r\n          <h4>{noteDate.format(\"Do\")}</h4>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { JorunalEntry } from './JorunalEntry'\r\n\r\nexport const JournalEntries = () => {\r\n    \r\n    const {notes} = useSelector(state => state.notes)\r\n    \r\n\r\n\r\n    return (\r\n        <div className=\"jorunal_entries\">\r\n            {\r\n                notes.map(note => (\r\n                    <JorunalEntry \r\n                        key={note.id}\r\n                        {...note} \r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { starLogout } from '../../actions/auth'\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const handleAddNew = () =>{\r\n        dispatch( startNewNote() );\r\n    }\r\n\r\n    \r\n\r\n\r\n    const dispatch = useDispatch()\r\n    // useSelect para buscar cosas del redux\r\n    const {name} = useSelector(state => state.auth)\r\n    const handleLougout = ()=>{\r\n       dispatch( starLogout() )\r\n\r\n\r\n    }\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> {name}</span>\r\n                </h3>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleLougout}\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n            <div \r\n                onClick={handleAddNew}\r\n                className=\"journal__new-entry\"\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p>\r\n                    New entry\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n            \r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const JournalScreen = () => {\r\n  const {active} = useSelector(state => state.notes)\r\n    return (\r\n      <div className=\"journal__main-content\">\r\n        <Sidebar />\r\n        <main style={{ width: \"100%\" }}>\r\n          { \r\n            ( active ) \r\n                ? (<NoteScreen />) \r\n                : (<NothingSelected />)\r\n          }\r\n        \r\n        </main>\r\n      </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { startGoogleLogin, startLoginEmailPassword } from \"../../actions/auth\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\n\r\n\r\nexport const LoginScreen = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const {loading} = useSelector(state => state.ui)\r\n  \r\n  const [formValues, handleInputChange] =  useForm({\r\n    email: '',\r\n    password: ''\r\n  })\r\n\r\n  const { email, password } = formValues;\r\n\r\n  const handleLogin=(e)=>{\r\n    e.preventDefault();\r\n    dispatch(startLoginEmailPassword(email, password));\r\n\r\n    \r\n  }\r\n  const handleGoogleSignIn=(e)=>{\r\n    dispatch(startGoogleLogin());\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"auth__title\">Login</h3>\r\n      <form onSubmit={handleLogin}>\r\n        <input\r\n          autoComplete=\"off\"\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          name=\"email\"\r\n          className=\"auth__input\"\r\n          value={email}\r\n          onChange={handleInputChange}\r\n        />\r\n\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          name=\"password\"\r\n          className=\"auth__input\"\r\n          value={password}\r\n          onChange={handleInputChange}\r\n        />\r\n\r\n        <button\r\n          className=\"btn btn-primary btn-block\"\r\n          type=\"submit\"\r\n          disabled={loading}\r\n        >\r\n          Login\r\n        </button>\r\n        <hr />\r\n        <div className=\"auth__social-networks\">\r\n          <p>login with social network</p>\r\n          <div onClick={handleGoogleSignIn} className=\"google-btn\">\r\n            <div className=\"google-icon-wrapper\">\r\n              <img\r\n                className=\"google-icon\"\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\r\n                alt=\"google button\"\r\n              />\r\n            </div>\r\n            <p className=\"btn-text\">\r\n              <b>Sign in with google</b>\r\n            </p>\r\n          </div>\r\n\r\n          <Link className=\"link\" to=\"/auth/register\">\r\n            Create a new account\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport validator from \"validator\";\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const {msgError} = useSelector(state => state.ui)\r\n  \r\n\r\n  const [formValues, handleInputChange] = useForm({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    password2: '',\r\n  })\r\n\r\n  const { name, email ,password, password2 } = formValues;\r\n\r\n  const handleRegister =(e) => {\r\n      e.preventDefault();\r\n\r\n      if (isFormValid()) {\r\n         dispatch(startRegisterWithEmailPasswordName(email, password, name));\r\n        \r\n      }\r\n\r\n}\r\n\r\n  const isFormValid=()=>{\r\n      if (name.trim().length === 0) {\r\n        dispatch(setError(\"name is required\"));\r\n        return false;\r\n      } else if (!validator.isEmail(email)) {\r\n        dispatch(setError(\"email is not valid\"));\r\n        return false;\r\n      } else if (password !== password2 || password2 < 5) {\r\n        dispatch(\r\n          setError(\r\n            \"passowrd should be at least 5 characters and match each other\"\r\n          )\r\n        );\r\n        return false;\r\n      }\r\n\r\n    dispatch(removeError)\r\n    return true;\r\n  }\r\n    return (\r\n      <>\r\n        <h3 className=\"auth__title mb-5\">Register</h3>\r\n        <form onSubmit={handleRegister}>\r\n\r\n        {\r\n          msgError &&\r\n\r\n          (<div className=\"auth__alert-error\">\r\n            {msgError}\r\n          </div>)\r\n        \r\n        }\r\n\r\n          <input\r\n            autoComplete=\"off\"\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n            name=\"name\"\r\n            className=\"auth__input\"\r\n            value={name}\r\n            onChange={handleInputChange}\r\n          />\r\n\r\n          <input\r\n            autoComplete=\"off\"\r\n            type=\"text\"\r\n            placeholder=\"Email\"\r\n            name=\"email\"\r\n            className=\"auth__input\"\r\n            value={email}\r\n            onChange={handleInputChange}\r\n          />\r\n\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            className=\"auth__input\"\r\n            value={password}\r\n            onChange={handleInputChange}\r\n          />\r\n\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm password\"\r\n            name=\"password2\"\r\n            className=\"auth__input\"\r\n            value={password2}\r\n            onChange={handleInputChange}\r\n          />\r\n\r\n          <button className=\"btn btn-primary btn-block mb-5\" type=\"submit\">\r\n            Register\r\n          </button>\r\n          <hr />\r\n          <Link className=\"link mt-5\" to=\"/auth/login\">\r\n            Already registered?\r\n          </Link>\r\n        </form>\r\n      </>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n      <div className=\"auth__main\">\r\n        <div className=\"auth__box-container\">\r\n        <Switch>\r\n          <Route exact path=\"/auth/login\" component={LoginScreen} />\r\n          <Route exact path=\"/auth/register\" component={RegisterScreen} />\r\n          <Route exact path=\"/\" component={JournalScreen} />\r\n          \r\n          <Redirect to=\"/auth/login\" />\r\n        </Switch>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const PrivateRoutes = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props)=>(\r\n                (isAuthenticated)\r\n                // si esta log pasa\r\n                ? (<Component {...props} />)\r\n                // si no pa login\r\n                : (<Redirect to='/auth/login'/>)\r\n            )}\r\n            \r\n        />\r\n    )\r\n}\r\n\r\n\r\nPrivateRoutes.prototypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const PublicRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        (isAuthenticated) \r\n        ? (<Redirect to=\"/\" />)\r\n        : (<Component {...props} />) \r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPublicRoute.prototypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { firebase } from \"../firebase/firebase-config\";\r\nimport { BrowserRouter as Router, Switch,  Redirect } from \"react-router-dom\";\r\nimport { JournalScreen } from \"../components/journal/JournalScreen\";\r\nimport { AuthRouter } from \"./AuthRouter\";\r\nimport { login } from \"../actions/auth\";\r\nimport { PrivateRoutes } from \"./PrivateRoutes\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\nimport {starLoadNotes } from \"../actions/notes\";\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  //este verifica que este entrando \r\n  const [cheking, setCheking] = useState(true)\r\n  // este dice si entra al / o no\r\n  const [isLoggeIn, setIsLoggeIn] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n      firebase.auth().onAuthStateChanged(async (user) => {\r\n\r\n        if (user?.uid) {\r\n\r\n          dispatch(login(user.uid, user.displayName));\r\n          setIsLoggeIn(true)\r\n          dispatch(starLoadNotes(user.uid));\r\n          \r\n        } else {\r\n          setIsLoggeIn(false)\r\n        }\r\n        setCheking(false);\r\n      });\r\n        \r\n    }, [dispatch, setCheking, setIsLoggeIn]);\r\n\r\n    if (cheking) {\r\n      return (\r\n          <h1>Wait...</h1>\r\n      )\r\n      \r\n    }\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <PublicRoute\r\n            isAuthenticated={isLoggeIn}\r\n            path=\"/auth\"\r\n            component={AuthRouter}\r\n          />\r\n\r\n          <PrivateRoutes\r\n            isAuthenticated={isLoggeIn}\r\n            exact\r\n            path=\"/\"\r\n            component={JournalScreen}\r\n          />\r\n\r\n          <Redirect to=\"/auth/login\" />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n","\r\nimport { types } from \"../types/types\";\r\n/*\r\nsadasfasfasfasf\r\n*/\r\nconst initialState ={\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = ( state = initialState, action ) =>{\r\n\r\n        switch (action.type) {\r\n            case types.notesActive:\r\n                return{\r\n                    ...state,\r\n                    active:{\r\n                        ...action.payload\r\n                    }\r\n                }\r\n                \r\n             case types.notesAddNew:\r\n                 return{\r\n                     ...state,\r\n                     notes: [action.payload, ...state.notes]\r\n                 }   \r\n            \r\n            case types.notesLoad:\r\n                return{\r\n                    ...state,\r\n                    notes: [...action.payload]\r\n                }\r\n\r\n            case types.notesUpdated:\r\n                return{\r\n                    ...state,\r\n                    notes: state.notes.map(\r\n                        // confirma que sea la misma nota\r\n                        note => note.id === action.payload.id\r\n                        // cambiar\r\n                        ? action.payload.note\r\n                        // mno hacer nada\r\n                        : note\r\n                    )\r\n                }    \r\n            \r\n            case types.notesDelete:\r\n                return{\r\n                    ...state,\r\n                    active: null,\r\n                    notes: state.notes.filter(note=> note.id !== action.payload)\r\n                }\r\n\r\n             case types.notesLogoutCleaning:\r\n                 return{\r\n                     ...state,\r\n                     active: null,\r\n                     notes: []\r\n                     \r\n                 }   \r\n\r\n            default:\r\n                return state;\r\n        }\r\n\r\n\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState ={\r\n    loading:false,\r\n    msgError:null\r\n}\r\nexport const uiReducer = (state = initialState, action)=>{\r\n\r\n    switch (action.type) {\r\n      case types.uiSetError:\r\n        return {\r\n          ...state,\r\n          msgError: action.payload,\r\n        };\r\n\r\n      case types.uiRemoveError:\r\n        return {\r\n          ...state,\r\n          msgError: null,\r\n        };\r\n      case types.uiStartLoading:\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n        \r\n        };\r\n      case types.uiFinishLoading:\r\n        return {\r\n          ...state,\r\n          loading: false\r\n        };\r\n\r\n      default:\r\n        return state;\r\n    }\r\n\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport { notesReducer } from \"../reducers/notesReducer\";\r\nimport { uiReducer } from \"../reducers/uiReducer\";\r\n\r\nconst composeEnhancers =\r\n  (typeof window !== \"undefined\" &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n  auth: authReducer,\r\n  ui: uiReducer,\r\n  notes: notesReducer,\r\n});\r\n\r\nexport const store = createStore(\r\n  reducers,\r\n  composeEnhancers(\r\n      applyMiddleware(thunk)\r\n  )\r\n);","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = ( state ={},action ) =>{\r\n\r\n        switch ( action.type ) {\r\n            case  types.login:\r\n                return {\r\n                    uid: action.payload.uid,\r\n                    name: action.payload.displayName,\r\n                }\r\n                \r\n            case  types.logout:\r\n                    return{ }    \r\n                \r\n        \r\n            default:\r\n                return state;\r\n        }\r\n}","import React from 'react'\r\nimport { Provider } from \"react-redux\";\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { store } from './store/store';\r\n\r\n\r\nexport const JouralApp = () => {\r\n    return (\r\n      <Provider store={store}>\r\n        <AppRouter />\r\n      </Provider>\r\n    );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JouralApp } from './JouralApp';\n\nimport \"./styles/styles.scss\";\n\n\n\nReactDOM.render(\n  \n    <JouralApp />,\n  \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}